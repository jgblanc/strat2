# Snakefile to prep UKBB for analysis
CHR =[]
for i in range(1, 23):
  CHR.append(str(i))
SIZE = ["small", "medium", "large"]
NSNP = ["100", "1000", "10000", "100000", "1000000"]


def get_snp_num(x):
  out = int(x)
  return out

rule all:
    input:
        expand("output/debug/{size}/stats_eas-afr_{nsnp}.txt" ,chr=CHR, size = SIZE, nsnp=NSNP)


## Extract small subset

rule make_small_set:
    input:
        psam="/scratch/jgblanc/ukbb/plink2-files/ALL/ukb_imp_chr{chr}_v3.psam",
	      pvar="/scratch/jgblanc/ukbb/plink2-files/ALL/ukb_imp_chr{chr}_v3.pvar",
	      pgen="/scratch/jgblanc/ukbb/plink2-files/ALL/ukb_imp_chr{chr}_v3.pgen",
	      IDS="data/ids/gwas_ids/{size}.txt",
	      SNPs="data/HGDP1KG/pruned_snps/e5/eas-afr/L-pruneall.txt"
    output:
        psam="/scratch/jgblanc/ukbb/plink2-files/{size}/ukb_imp_chr{chr}_v3.psam",
	      pvar="/scratch/jgblanc/ukbb/plink2-files/{size}/ukb_imp_chr{chr}_v3.pvar",
	      pgen="/scratch/jgblanc/ukbb/plink2-files/{size}/ukb_imp_chr{chr}_v3.pgen",
    params:
        prefix="/scratch/jgblanc/ukbb/plink2-files/ALL/ukb_imp_chr{chr}_v3",
        prefix_out="/scratch/jgblanc/ukbb/plink2-files/{size}/ukb_imp_chr{chr}_v3"
    threads: 8
    resources:
        mem_mb=38000,
        time="03:00:00"
    shell:
        """
	      plink2 --pfile {params.prefix} \
	      --keep {input.IDS} \
	      --extract {input.SNPs} \
	      --make-pgen \
	      --maf 0.01 \
	      --memory 38000 \
	      --threads 8 \
	      --out {params.prefix_out}
	      """

rule get_freq:
    input:
        psam="/scratch/jgblanc/ukbb/plink2-files/{size}/ukb_imp_chr{chr}_v3.psam",
	      pvar="/scratch/jgblanc/ukbb/plink2-files/{size}/ukb_imp_chr{chr}_v3.pvar",
	      pgen="/scratch/jgblanc/ukbb/plink2-files/{size}/ukb_imp_chr{chr}_v3.pgen",
    output:
        freq="/scratch/jgblanc/ukbb/plink2-files/{size}/ukb_imp_chr{chr}_v3.afreq"
    params:
        prefix="/scratch/jgblanc/ukbb/plink2-files/{size}/ukb_imp_chr{chr}_v3"
    shell:
        """
	      plink2 --pfile {params.prefix} \
	      --freq \
	      --memory 38000 \
	      --out {params.prefix}
	      """

# Calc FGr

rule calc_FGr:
    input:
        rvec = expand("data/HGDP1KG/r/e5/eas-afr_chr{chr}.rvec", chr = CHR)
    output:
        FGr="output/debug/{size}/stats_eas-afr_{nsnp}.txt",
    params:
        plink_prefix="/scratch/jgblanc/ukbb/plink2-files/{size}/ukb_imp_chr",
        out_prefix="output/debug/{size}/eas-afr_{nsnp}",
        r_prefix="data/HGDP1KG/r/e5/eas-afr_chr",
        snpNum=lambda wildcards: get_snp_num(wildcards.nsnp)
    shell:
        """
        Rscript code/debug/calc_FGr_vp.R {params.plink_prefix} {params.out_prefix} {output.FGr} {params.r_prefix} {params.snpNum}
	      """


