# Snakefile to run main pipeline
CHR = []
for i in range(1, 23):
  CHR.append(str(i))
#GWAS= ["e5", "e10", "e50", "e200", "ALL", "WBS"]
GWAS = ["WBS"]
DATASET = ["SDS"]
CONTRASTS = ["Han"]
#CONTRASTS = ["eurasia-long"]
NSNP = ["L-pruneall"]

def get_rep_num(x):
  out = int(x)
  return out

wildcard_constraints:
    nsnp="L-pruneall"

rule all:
    input:
        expand("output/calculate_H/{dataset}/{gwas}/{nsnp}/Reps_{contrasts}.txt" ,chr=CHR, gwas =GWAS, nsnp=NSNP, dataset=DATASET,contrasts=CONTRASTS)


# Get sample variance of GWAS panel genotypes for all GWAS panels

rule get_dosage_file:
    input:
        gwas="data/ids/gwas_ids/{gwas}.txt",
        gp_genos="/scratch/jgblanc/ukbb/plink2-files/ALL/ukb_imp_chr{chr}_v3.pgen"
    output:
        temp("/scratch/jgblanc/strat2/data/{gwas}/dosages/dosages_{chr}.traw")
    params:
        prefix_in="/scratch/jgblanc/ukbb/plink2-files/ALL/ukb_imp_chr{chr}_v3",
        prefix_out="/scratch/jgblanc/strat2/data/{gwas}/dosages/dosages_{chr}"
    resources:
        mem_mb=38000,
        time="01:00:00"
    shell:
        """
        plink2 --pfile {params.prefix_in} \
        --keep {input.gwas} \
        --recode A-transpose \
	      --threads 8 \
        --memory 38000 \
        --out {params.prefix_out}
        """

rule calculate_GWAS_variance:
    input:
        "/scratch/jgblanc/polygenic_selection_stratification/data/{gwas}/dosages/dosages_{chr}.traw"
    output:
        "data/gwas_variance/{gwas}/variance_{chr}.txt"
    resources:
	      time="48:00:00",
	      mem_mb=100000,
    shell:
        """
        Rscript code/blocks/compute_GWAS_variance.R {input} {output}
        """

# Downsample SNPs used to compute corrections

rule prune_SNPs:
    input:
        gp_genos="/scratch/jgblanc/ukbb/plink2-files/ALL/ukb_imp_chr{chr}_v3.pgen",
        IDs="data/ids/gwas_ids/{gwas}.txt",
        snps="data/{dataset}/variants/{gwas}/{contrasts}/overlappingSNPs_chr{chr}.txt"
    output:
        temp("data/{dataset}/pruned_snps/{gwas}/{contrasts}/pruned_{chr}.prune.in"),
	temp("data/{dataset}/pruned_snps/{gwas}/{contrasts}/pruned_{chr}.prune.out"),
	temp("data/{dataset}/pruned_snps/{gwas}/{contrasts}/pruned_{chr}.log")
    resources:
        time="06:00:00",
	mem_mb=100000
    params:
        prefix_plink = "/scratch/jgblanc/ukbb/plink2-files/ALL/ukb_imp_chr{chr}_v3",
        prefix_out = "data/{dataset}/pruned_snps/{gwas}/{contrasts}/pruned_{chr}"
    shell:
        """
        plink2 --pfile {params.prefix_plink} \
        --keep {input.IDs} \
        --extract {input.snps} \
        --indep-pairwise 100kb 0.8 \
        --out {params.prefix_out}
        """

rule downsample_snps:
    input:
        snps=expand("data/{{dataset}}/pruned_snps/{{gwas}}/{{contrasts}}/pruned_{chr}.prune.in", chr = CHR),
	overlap=expand("data/{{dataset}}/variants/{{gwas}}/{{contrasts}}/overlappingSNPs_chr{chr}.txt", chr = CHR)
    output:
        sample = "data/{dataset}/pruned_snps/{gwas}/{contrasts}/{nsnp}.txt"
    shell:
        """
        Rscript code/clean_snps/sample_snps.R {output.sample} {wildcards.nsnp} {input.snps} {input.overlap}
        """

rule block_snps:
    input:
        "data/{dataset}/pruned_snps/{gwas}/{contrasts}/{nsnp}.txt"
    output:
        "data/{dataset}/pruned_snps/{gwas}/{contrasts}/block_{nsnp}.txt"
    shell:
        """
        Rscript code/clean_snps/block_snps.R {input} {output}
        """

# Concat chromosomes and extract PCA SNPs

rule concat_chr:
    input:
        pgen=expand("/scratch/jgblanc/ukbb/plink2-files/ALL/ukb_imp_chr{chr}_v3.pgen", chr=CHR),
        pvar=expand("/scratch/jgblanc/ukbb/plink2-files/ALL/ukb_imp_chr{chr}_v3.pvar", chr=CHR),
        psam=expand("/scratch/jgblanc/ukbb/plink2-files/ALL/ukb_imp_chr{chr}_v3.psam", chr=CHR),
        snps="data/ukbb/ukbb_pc_snps.txt"
    output:
        "/scratch/jgblanc/ukbb/plink2-files/ALL/ukb_pcSNPs_ALL_v3.pgen",
        "/scratch/jgblanc/ukbb/plink2-files/ALL/ukb_pcSNPs_ALL_v3.pvar",
        "/scratch/jgblanc/ukbb/plink2-files/ALL/ukb_pcSNPs_ALL_v3.psam",
    params:
        prefix_out="/scratch/jgblanc/ukbb/plink2-files/ALL/ukb_pcSNPs_ALL_v3",
        merge_prefix=expand("/scratch/jgblanc/ukbb/plink2-files/ALL/ukb_imp_chr{chr}_v3", chr=CHR, newline="\n")
    threads: 16
    resources:
        mem_mb=60000,
        time="12:00:00"
    shell:
        """
        echo {params.merge_prefix} > tmp.txt
	tr ' ' '\n' < "tmp.txt" > "tmp_chr_list.txt"
        plink2 --pmerge-list tmp_chr_list.txt \
        --extract {input.snps} \
	      --threads 16 \
        --memory 60000 \
        --make-pgen \
        --freq \
        --out {params.prefix_out}
        """

# Calculate overlap statistics

rule calc_H_reps:
    input:
        gwas_var=expand("data/gwas_variance/{{gwas}}/variance_{chr}.txt", chr = CHR),
        r=expand("data/{{dataset}}/r/{{gwas}}/{{contrasts}}_chr{chr}.rvec", chr=CHR),
        IDs="data/ids/gwas_ids/{gwas}.txt",
        snps="data/ukbb/ukbb_pc_snps.txt"
    output:
        H = "output/calculate_H/{dataset}/{gwas}/{nsnp}/Reps_{contrasts}.txt"
    params:
        plink_prefix="/scratch/jgblanc/ukbb/plink2-files/ALL/ukb_pcSNPs_ALL_v3",
        out_prefix="output/calculate_H/{dataset}/{gwas}/{nsnp}/{contrasts}",
        var_prefix="data/gwas_variance/{gwas}/variance_",
        r_prefix="data/{dataset}/r/{gwas}/{contrasts}_chr"
    threads: 8
    resources:
        mem_mb=38000,
        time="12:00:00"
    shell:
        """
        Rscript code/calculate_overlap/calc_H_seq.R {params.plink_prefix} {params.r_prefix} {params.var_prefix} {params.out_prefix} {input.snps} {input.IDs} {output.H}
	      """

rule calc_H_pval:
    input:
        "output/calculate_H/{dataset}/{gwas}/{nsnp}/Reps_{contrasts}.txt"
    output:
        "output/calculate_H/{dataset}/{gwas}/{nsnp}/H_{contrasts}.txt"
    shell:
        """
        Rscript code/calculate_overlap/calc_pval.R {input} {output}
	      """


rule concat_H:
    input:
        expand("output/calculate_H/{{dataset}}/{gwas}/{nsnp}/H_{contrasts}.txt", gwas=GWAS, contrasts=CONTRASTS, nsnp=NSNP)
    output:
        "plots/H_{dataset}.txt"
    shell:
        """
        Rscript code/summarize/concat_OverlapStats.R {output} {input}
	      """
